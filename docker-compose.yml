# docker-compose.yml
version: '3.8'

services:
  app:
    build: . # Construye la imagen a partir del Dockerfile en el directorio actual
    ports:
      - "3000:3000" # Mapea el puerto 3000 del host al 3000 del contenedor
    environment:
      - DB_HOST=mysql_db # Nombre del servicio de la base de datos
      - DB_USER=todouser
      - DB_PASSWORD=todopassword
      - DB_NAME=lista_tareas_db
      - NODE_ENV=development # O production
    depends_on:
      - mysql_db # La app depende de que la base de datos esté lista
    networks:
      - app-network

  mysql_db:
    image: mysql:8.0 # Usa la imagen oficial de MySQL
    ports:
      - "3307:3306" # Opcional: Mapea 3306 del contenedor a 3307 del host para acceso externo
    environment:
      MYSQL_ROOT_PASSWORD: rootpassword # Contraseña para el usuario root de MySQL
      MYSQL_DATABASE: lista_tareas_db # Crea esta base de datos al iniciar
      MYSQL_USER: todouser # Crea este usuario
      MYSQL_PASSWORD: todopassword # Contraseña para el nuevo usuario
    volumes:
      - mysql_data:/var/lib/mysql # Persiste los datos de MySQL
      - ./mysql-init:/docker-entrypoint-initdb.d
    networks:
      - app-network
    healthcheck: # Para asegurar que la DB esté lista antes que la app intente conectar (opcional pero recomendado)
      test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost", "-u", "$${MYSQL_USER}", "-p$${MYSQL_PASSWORD}"]
      timeout: 20s
      retries: 10

volumes:
  mysql_data: # Define el volumen para persistencia de datos

networks:
  app-network:
    driver: bridge